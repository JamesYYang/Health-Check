// Generated by CoffeeScript 1.6.3
var CheckEntry, CheckService, Q, checkEntry, config, logger, redis, util, _;

redis = require("../common/redisBiz");

CheckService = require("./checkService").CheckService;

_ = require('lodash');

util = require("../common/util");

config = require("../config/config");

Q = require("q");

logger = require("../common/logger");

CheckEntry = (function() {
  function CheckEntry() {
    this.hashValue = "";
    this.checkRules = [];
  }

  return CheckEntry;

})();

CheckEntry.prototype.run = function() {
  var key, self;
  key = "HealthCheckAllRules";
  self = this;
  return redis.getFromRedis(key).then(function(rules) {
    debugger;
    var newHash;
    if ((rules == null) || rules.length === 0) {
      self.checkRules = [];
      this.hashValue = "";
    } else {
      logger.consoleLog("Get Health Info");
    }
    newHash = util.getHash(JSON.stringify(rules));
    if (newHash !== self.hashValue) {
      self.stop();
      self.checkRules = _.map(rules, function(rule) {
        return new CheckService(rule);
      });
      _.forEach(self.checkRules, function(rule) {
        return rule.beginCheck();
      });
      return self.hashValue = newHash;
    }
  });
};

CheckEntry.prototype.stop = function() {
  if (this.checkRules.length > 0) {
    return _.forEach(this.checkRules, function(rule) {
      return rule.stopCheck();
    });
  }
};

checkEntry = new CheckEntry();

exports.runCheck = function() {
  checkEntry.run();
  return setInterval(function() {
    return checkEntry.run();
  }, config.checkInterval);
};
