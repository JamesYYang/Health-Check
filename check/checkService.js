// Generated by CoffeeScript 1.6.3
var CheckService, logger, redis;

redis = require("../common/redisBiz");

logger = require("../common/logger");

exports.CheckService = CheckService = (function() {
  function CheckService(checkRule) {
    this.checkRule = checkRule;
    this.setStrategy();
  }

  return CheckService;

})();

CheckService.prototype.setStrategy = function() {
  if (this.checkRule.Protocol.toLowerCase() === "tcp") {
    return this.checkStrategy = require("./strategies/tcp").checkHealth;
  } else {
    return this.checkStrategy = require("./strategies/http").checkHealth;
  }
};

CheckService.prototype.beginCheck = function() {
  var self;
  self = this;
  this.timer = setInterval(function() {
    return self.checkCore();
  }, this.checkRule.Interval * 1000);
};

CheckService.prototype.checkCore = function() {
  var self;
  logger.consoleLog("Begin Health Check for " + this.checkRule.HealthRuleId);
  self = this;
  return this.checkStrategy(this.checkRule, function(result) {
    return self.storeResult(result);
  });
};

CheckService.prototype.storeResult = function(result) {
  var key;
  key = "HealthCheck:" + this.checkRule.HealthRuleId;
  logger.consoleLog("Finish Health Check for " + this.checkRule.HealthRuleId + ", Result:" + result);
  return redis.setToRedis(key, result);
};

CheckService.prototype.stopCheck = function() {
  logger.consoleLog("Stop Health Check for " + this.checkRule.HealthRuleId);
  return clearInterval(this.timer);
};
